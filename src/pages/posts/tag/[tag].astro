---

export const prerender = true

import BlogTagsLink from '../../../components/BlogTagsLink.astro'
import NoContents from '../../../components/NoContents.astro'
import Pagination from '../../../components/Pagination.astro'
import PostDate from '../../../components/PostDate.astro'
import PostExcerpt from '../../../components/PostExcerpt.astro'
import PostFeaturedImage from '../../../components/PostFeaturedImage.astro'
import PostTags from '../../../components/PostTags.astro'
import PostTitle from '../../../components/PostTitle.astro'
import ReadMoreLink from '../../../components/ReadMoreLink.astro'
import Layout from '../../../layouts/Layout.astro'
import type { SelectProperty } from '../../../lib/interfaces.ts'
import {
getAllTags,
getNumberOfPagesByTag,
getPostsByTag,
} from '../../../lib/notion/client.ts'
import { NUMBER_OF_POSTS_PER_PAGE } from '../../../server-constants.ts'
// import styles from '../../../styles/blog.module.css' // Styles migrated to Tailwind
// import '../../../styles/notion-color.css' // Unrelated, should be handled separately or already handled

export async function getStaticPaths() {
  const allTags = await getAllTags()
  return allTags.map((tag: SelectProperty) => ({ params: { tag: tag.name } }))
}

const { tag } = Astro.params

const [posts, tags, numberOfPages] = await Promise.all([
  getPostsByTag(tag, NUMBER_OF_POSTS_PER_PAGE),
  getAllTags(),
  getNumberOfPagesByTag(tag),
])

const currentTag = posts[0].Tags?.find((t) => t.name === tag)
---

<Layout title={`Posts in ${tag}`} path={`/posts/tag/${tag}`} description={`Posts in ${tag}`} ogImage={`/default-og-image.png`}>
  <div slot="main" class=""> {/* Removed styles.main */}
    <header class="pb-5"> {/* Added pb-5 for .main header styles */}
      <div class="m-0 line-height-[1.3] font-normal text-[1.15rem] md:text-[1.2rem]">
        <span class={`bg-${currentTag?.color}-100 rounded-md px-3 py-1`}>{tag}</span>
      </div>
    </header>

    {
      posts.length === 0 ? (
        <NoContents contents={posts} />
      ) : (
        posts.map((post) => (
          <div class="mx-auto mb-10"> {/* Removed styles.post, added mx-auto mb-10 */}
            <PostDate post={post} />
            <PostTags post={post} enableLink={false} />
            <PostTitle post={post} enableLink={false} />
            <PostFeaturedImage post={post} />
            <PostExcerpt post={post} />
            <ReadMoreLink post={post} />
          </div>
        ))
      )
    }

    <footer class="border-t border-dashed border-neutral-400 mx-auto pt-10 px-0 sm:mx-auto sm:mb-10 sm:mt-0"> {/* Added styles for .main footer */}
      <Pagination tag={tag} currentPage={1} numberOfPages={numberOfPages} />
    </footer>
  </div>

  <div slot="aside" class=""> {/* Removed styles.aside, assuming it's part of blog.module.css or handled elsewhere */}
    
    <BlogTagsLink heading="Categories" tags={tags} />
  </div>
</Layout>
