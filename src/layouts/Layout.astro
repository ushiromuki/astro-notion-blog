---
import SearchButton from '../components/SearchButton.astro'
import SearchModal from '../components/SearchModal.astro'
import { filePath, getNavLink } from '../lib/blog-helpers.ts'
import { getDatabase } from '../lib/notion/client.ts'
import '../styles/global.css'
import '../styles/syntax-coloring.css'

export interface Props {
  title: string
  description: string
  path: string
  ogImage: string
  pageCoverImage: string
}

const {
  title = '',
  description = '',
  path = '/',
  ogImage = '',
  pageCoverImage = '',
} = Astro.props

const database = await getDatabase()

const siteTitle = title ? `${title} - ${database.Title}` : database.Title
const siteDescription = description ? description : database.Description
const siteURL = new URL(getNavLink(path), Astro.site).toString()
const siteOGImage = new URL('/og/default-og-image.png', Astro.site)

let coverImageURL: string
if (database.Cover) {
  if (database.Cover.Type === 'external') {
    coverImageURL = database.Cover.Url
  } else if (database.Cover.Type === 'file') {
    try {
      coverImageURL = filePath(new URL(database.Cover.Url))
    } catch {
      console.log('Invalid DB cover image URL: ', database.Cover?.Url)
    }
  }
}

let customIconURL: string
if (database.Icon && database.Icon.Type === 'file') {
  try {
    customIconURL = filePath(new URL(database.Icon.Url))
  } catch {
    console.log('Invalid DB custom icon URL: ', database.Icon?.Url)
  }
}
---

<!DOCTYPE html>
<html lang="en" prefix="og: https://ogp.me/ns#">
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="max-image-preview:large" />
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{siteTitle}</title>
    <meta name="description" content={siteDescription} />
    <link rel="canonical" href={siteURL} />
    <meta property="og:url" content={siteURL} />
    <meta property="og:title" content={siteTitle} />
    <meta property="og:description" content={siteDescription} />
    <meta property="og:site_name" content={database.Title} />
    <meta property="og:image" content={ogImage || siteOGImage} />
    <meta name="twitter:title" content={siteTitle} />
    <meta name="twitter:description" content={siteDescription} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:image" content={ogImage || siteOGImage} />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css"
      integrity="sha384-vKruj+a13U8yHIkAyGgK1J3ArTLzrFGBbBc0tDp4ad/EyewESeXE/Iv67Aj8gKZ0"
      crossorigin="anonymous"
    />
  </head>
  <body>
    <div class="w-full min-h-screen flex flex-col">
      <header>
        {
          pageCoverImage !== '' ? (
            <div class="w-full h-36 overflow-hidden bg-gradient-to-r from-neutral-700 to-stone-900">
              <img class="w-full object-contain object-top-left" src={pageCoverImage} />
            </div>
          ) : (
            <div class="h-24 md:h-36 cover" />
          )
        }
      </header>

      <div class="container mx-auto">
        <main>
          <div class="content">
            <header>
              <h1>
                <a href="/">
                  {
                    database.Icon && database.Icon.Type === 'emoji' ? (
                      <>
                        <span class="title-icon">{database.Icon.Emoji}</span>
                        {database.Title}
                      </>
                    ) : database.Icon && database.Icon.Type === 'external' ? (
                      <>
                        <img src={database.Icon.Url} alt="Site icon image" />
                        {database.Title}
                      </>
                    ) : database.Icon && database.Icon.Type === 'file' ? (
                      <>
                        <img
                          src={database.Icon.Url}
                          class="custom-icon"
                          alt="Site icon image"
                        />
                        {database.Title}
                      </>
                    ) : (
                      database.Title
                    )
                  }
                  </a>
              </h1>
              <div class="header_btn_area">
                <a class="header_btn" href="/">Home</a>
                <a class="header_btn" href="/posts">Blog</a>
                <SearchButton/>
              </div>
              
            </header>

            <slot name="main" />

            <footer>
              <div>
                <span>Author : usrm</span><br />
                <span>Powered by &#x1f680;</span>
                <a href="https://github.com/otoyo/astro-notion-blog"
                  >astro-notion-blog</a
                >
              </div>
            </footer>
          </div>
        </main>

        <aside>
          
          <slot name="aside" />
        </aside>
      </div>
    </div>

    <SearchModal/>
  </body>
</html>

<style>
  

  main {
    flex: 1;
    order: 2;
    justify-content: space-between;
  }
  

  aside {
    order: 2;
    width: 100%;
    padding: 20px 20px;
    background-color: #f4f4f4;
  }
  div.cover {
    width: 100%;
    object-fit: cover;
    object-position: center 60%;
    background-color: #fa8bff;
    background-image: linear-gradient(
      45deg,
      #fa8bff 0%,
      #2bd2ff 52%,
      #2bff88 90%
    );
  }

  div.content {
    padding: 20px 40px;
  }
  @media (max-width: 640px) {
    div.content {
      padding: 0 18px;
    }
  }

  main header {
    display: flex;
    flex-wrap: wrap;
    padding: 0 0;
   
    margin-bottom: 16px;
  }
  main header h1 {
    font-weight: 700;
    color: var(--fg);
    font-size: 1.2em;
    width: 100%;
  }
  main header h1 a {
    display: block;
    color: inherit;
  }
  main header h1 a:hover {
    color: inherit;
  }
  main header .header_btn_area {
    display: flex;
    flex-wrap: wrap;
    margin-top: 0.5rem;
    gap: 16px;
    justify-content: center;
    align-items: center;
    width: 100%;
  }
  main header a.header_btn {
    display: flex;
    padding: 0 8px;
    border-bottom: dotted 2px var(--accents-1);
    color: var(--accents-1);
    font-size: 0.8em;
    font-weight: 700;
    text-decoration: none;
  }
  main header a.header_btn:hover {
    opacity: 0.8;
  }
  main header h1 a span,
  main header h1 a img {
    display: inline-block;
    font-size: 1.1em;
  }
  main header h1 a span {
    margin-right: 0.3em;
    margin-left: -0.1rem;
  }
  main header h1 a span.title-icon {
    display: inline-flex;
    justify-content: center;
    align-self: center;
    width: 120px;
    height: 120px;
    background-color: var(--bg);
    margin-top: -64px;
    margin-right: 16px;
    font-size: 3.5em;
    border-radius: var(--radius);
  }
  main header h1 a img {
    width: 1.2em;
    height: 1.2em;
    margin-right: 0.2em;
    margin-left: -0.3rem;
    vertical-align: sub;
  }
  main header h1 a img.custom-icon {
    border-radius: var(--radius);
  }

  main header div.description {
    padding: 0.3rem 0 0.6rem;
    font-size: 0.95rem;
  }

  main footer {
    margin: 30px 0 10px;
    text-align: center;
    font-size: 0.75rem;
  }
  @media (max-width: 640px) {
    main footer {
      margin: 0 auto 30px;
    }
  }
  main footer span {
    color: var(--second-text);
  }
  main footer a {
    color: var(--accents-1);
    text-decoration: underline;
  }

  @media (max-width: 640px) {
    main header h1 a span.title-icon {
      width: 96px;
      height: 96px;
      background-color: var(--bg);
      margin-top: -64px;
      margin-right: 16px;
      font-size: 2.4em;
      border-radius: var(--radius);
    }
    main header h1 a img {
      width: 0.8em;
      height: 0.8em;
      margin-right: 0.2em;
      margin-left: -0.3rem;
      vertical-align: sub;
    }
  }
</style>

<style is:global>
  @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@300;400;700&display=swap');
  @import url('https://fonts.googleapis.com/css2?family=Noto+Color+Emoji&display=swap');

  :root {
    --gap-quarter: 0.25rem;
    --gap-half: 0.5rem;
    --gap: 1rem;
    --gap-double: 2rem;

    --bg: #fafafa;
    --fg: #413838;
    --second-text: #8a6a6a;
    --accents-1: #dc2227;
    --accents-2: #ef5950;
    --accents-3: #8d5a78;
    --geist-foreground: #212536;
    --geist-success: rgb(22, 173, 42);

    --radius: 8px;

    --font-sans: 'Noto Sans JP', 'Noto Color Emoji', sans-serif;
    --font-mono: SFMono-Regular, Menlo, Consolas, 'PT Mono', 'Liberation Mono',
      Courier, monospace;
  }

  * {
    box-sizing: border-box;
    word-break: break-word;
  }

  html,
  body {
    width: 100%;
    height: 100%;
    padding: 0;
    margin: 0;
    font-size: 18px;
    user-select: none;
  }

  body {
    height: 100%;
    background: var(--bg);
    color: var(--fg);
    font-family: 'Noto Sans JP', 'Noto Color Emoji', Arial, sans-serif,
      'Segoe UI Emoji', 'Segoe UI Symbol';

    /*background-image: radial-gradient(#ddd 1px, transparent 1px),
      radial-gradient(#ddd 1px, transparent 1px);*/
    background-position: 0 0, 25px 25px;
    background-attachment: fixed;
    background-size: 50px 50px;

    /* Hack */
    overflow-x: hidden;

    -webkit-font-smoothing: antialiased;
    -webkit-text-size-adjust: 100%;
  }

  figure {
    margin: 0;
    font-size: 0.85rem;
    color: #999;
    line-height: 1.8rem;
  }

  a {
    color: var(--accents-1);
    text-decoration: none;
  }
  a:hover {
    color: var(--accents-1);
  }

  

  mark {
    padding: var(--gap-quarter);
    border-radius: var(--radius);
    background: rgba(247, 212, 255, 0.8);
  }

  h1 {
    margin: 0;
    color: var(--fg);
    font-size: 2rem;
    font-weight: 700;
  }

  @media (max-width: 640px) {
    h1 {
      font-size: 1.6rem;
      margin-top: 16px;
    }
  }

  ol {
    color: #222;
    font-weight: 400;
    font-size: 0.9rem;
    line-height: 1.8rem;
  }
  p,
  ul {
    color: #222;
    font-weight: 400;
    font-size: 1rem;
    line-height: 1.8rem;
  }
  ul,
  ol {
    margin: 0;
    padding-inline-start: 1.5rem;
  }
  pre {
    margin: 0;
    white-space: pre;
    tab-size: 2;
  }
  pre :global(code) {
    overflow: auto;
    -webkit-overflow-scrolling: touch;
  }

  hr {
    display: block;
    height: 1px;
    border: 0;
    margin: 0.3rem 0;
    background-color: #333;
  }

  code {
    font-size: 0.9rem;
    background: rgba(135, 131, 120, 0.15);
    color: #eb5757;
    padding: 0.25rem;
    border-radius: var(--radius);
    font-family: var(--font-mono);
  }

  table {
    display: block;
    overflow-x: auto;
    white-space: nowrap;
    border-collapse: collapse;
  }

  table tr {
    vertical-align: top;
  }

  table th {
    font-weight: 600;
    background-color: #f4f4f4;
  }

  table td,
  table th {
    font-size: 0.9rem;
    border: 1px solid #e4e4e4;
    padding: 0.5rem 1rem;
    text-align: left;
    line-height: 1.2rem;
  }
  table td::after {
    content: '';
    display: inline-block;
    min-height: 0.9rem;
  }
</style>
