---
import SearchButton from '../components/SearchButton.astro'
import SearchModal from '../components/SearchModal.astro'
import { filePath, getNavLink } from '../lib/blog-helpers.ts'
import { getDatabase } from '../lib/notion/client.ts'
import '../styles/global.css'
// import '../styles/syntax-coloring.css' // Removed as syntax highlighting is handled by PrismJS themes or component-level styling

export interface Props {
  title: string
  description: string
  path: string
  ogImage: string
  pageCoverImage: string
}

const {
  title = '',
  description = '',
  path = '/',
  ogImage = '',
  pageCoverImage = '',
} = Astro.props

const database = await getDatabase()

const siteTitle = title ? `${title} - ${database.Title}` : database.Title
const siteDescription = description ? description : database.Description
const siteURL = new URL(getNavLink(path), Astro.site).toString()
const siteOGImage = new URL('/og/default-og-image.png', Astro.site)

let coverImageURL: string
if (database.Cover) {
  if (database.Cover.Type === 'external') {
    coverImageURL = database.Cover.Url
  } else if (database.Cover.Type === 'file') {
    try {
      coverImageURL = filePath(new URL(database.Cover.Url))
    } catch {
      console.log('Invalid DB cover image URL: ', database.Cover?.Url)
    }
  }
}

let customIconURL: string
if (database.Icon && database.Icon.Type === 'file') {
  try {
    customIconURL = filePath(new URL(database.Icon.Url))
  } catch {
    console.log('Invalid DB custom icon URL: ', database.Icon?.Url)
  }
}
---

<!DOCTYPE html>
<html lang="en" prefix="og: https://ogp.me/ns#">
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="max-image-preview:large" />
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{siteTitle}</title>
    <meta name="description" content={siteDescription} />
    <link rel="canonical" href={siteURL} />
    <meta property="og:url" content={siteURL} />
    <meta property="og:title" content={siteTitle} />
    <meta property="og:description" content={siteDescription} />
    <meta property="og:site_name" content={database.Title} />
    <meta property="og:image" content={ogImage || siteOGImage} />
    <meta name="twitter:title" content={siteTitle} />
    <meta name="twitter:description" content={siteDescription} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:image" content={ogImage || siteOGImage} />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css"
      integrity="sha384-vKruj+a13U8yHIkAyGgK1J3ArTLzrFGBbBc0tDp4ad/EyewESeXE/Iv67Aj8gKZ0"
      crossorigin="anonymous"
    />
  </head>
  <body class="text-[18px] select-none bg-[var(--bg)] text-[var(--fg)] font-[var(--font-sans)] overflow-x-hidden antialiased">
    <div class="w-full min-h-screen flex flex-col">
      <header>
        {
          pageCoverImage !== '' ? (
            <div class="w-full h-36 overflow-hidden bg-gradient-to-r from-neutral-700 to-stone-900">
              <img class="w-full object-contain object-top-left" src={pageCoverImage} />
            </div>
          ) : (
            <div class="h-24 md:h-36 cover w-full object-cover" />
          )
        }
      </header>

      <div class="container mx-auto">
        <main class="flex-1 order-2 justify-between">
          <div class="content px-10 py-5 sm:px-[18px] sm:py-0">
            <header class="flex flex-wrap mb-4">
              <h1 class="font-bold text-[var(--fg)] text-[1.2em] w-full">
                <a href="/" class="block text-inherit hover:text-inherit">
                  {
                    database.Icon && database.Icon.Type === 'emoji' ? (
                      <>
                        <span class="title-icon inline-block text-[1.1em] ml-[-0.1rem] inline-flex justify-center self-center w-[120px] h-[120px] bg-[var(--bg)] mt-[-64px] mr-4 text-[3.5em] rounded-[var(--radius)] sm:w-[96px] sm:h-[96px] sm:text-[2.4em]">{database.Icon.Emoji}</span>
                        {database.Title}
                      </>
                    ) : database.Icon && database.Icon.Type === 'external' ? (
                      <>
                        <img src={database.Icon.Url} alt="Site icon image" class="inline-block text-[1.1em] w-[1.2em] h-[1.2em] mr-[0.2em] ml-[-0.3rem] align-sub sm:w-[0.8em] sm:h-[0.8em]" />
                        {database.Title}
                      </>
                    ) : database.Icon && database.Icon.Type === 'file' ? (
                      <>
                        <img
                          src={database.Icon.Url}
                          class="custom-icon inline-block text-[1.1em] w-[1.2em] h-[1.2em] mr-[0.2em] ml-[-0.3rem] align-sub rounded-[var(--radius)] sm:w-[0.8em] sm:h-[0.8em]"
                          alt="Site icon image"
                        />
                        {database.Title}
                      </>
                    ) : (
                      database.Title
                    )
                  }
                  </a>
              </h1>
              <div class="header_btn_area flex flex-wrap mt-2 gap-4 justify-center items-center w-full">
                <a class="header_btn flex px-2 border-b-2 border-dotted border-[var(--accents-1)] text-[var(--accents-1)] text-[0.8em] font-bold no-underline hover:opacity-80" href="/">Home</a>
                <a class="header_btn flex px-2 border-b-2 border-dotted border-[var(--accents-1)] text-[var(--accents-1)] text-[0.8em] font-bold no-underline hover:opacity-80" href="/posts">Blog</a>
                <SearchButton />
              </div>
              
            </header>

            <slot name="main" />

            <footer class="mt-[30px] mb-[10px] text-center text-[0.75rem] sm:mx-auto sm:mb-[30px] sm:mt-0">
              <div>
                <span class="text-[var(--second-text)]">Author : usrm</span><br />
                <span class="text-[var(--second-text)]">Powered by &#x1f680;</span>
                <a href="https://github.com/otoyo/astro-notion-blog" class="text-[var(--accents-1)] underline"
                  >astro-notion-blog</a
                >
              </div>
            </footer>
          </div>
        </main>

        <aside class="order-2 w-full p-5 bg-gray-100">
          
          <slot name="aside" />
        </aside>
      </div>
    </div>

    <SearchModal/>
  </body>
</html>

<style>
  div.cover {
    object-position: center 60%;
    background-color: #fa8bff;
    background-image: linear-gradient(
      45deg,
      #fa8bff 0%,
      #2bd2ff 52%,
      #2bff88 90%
    );
  }
</style>

<style is:global>
  @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@300;400;700&display=swap');
  @import url('https://fonts.googleapis.com/css2?family=Noto+Color+Emoji&display=swap');

  :root {
    --gap-quarter: 0.25rem;
    --gap-half: 0.5rem;
    --gap: 1rem;
    --gap-double: 2rem;

    --bg: #fafafa;
    --fg: #413838;
    --second-text: #8a6a6a;
    --accents-1: #dc2227;
    --accents-2: #ef5950;
    --accents-3: #8d5a78;
    --geist-foreground: #212536;
    --geist-success: rgb(22, 173, 42);

    --radius: 8px;

    --font-sans: 'Noto Sans JP', 'Noto Color Emoji', sans-serif;
    --font-mono: SFMono-Regular, Menlo, Consolas, 'PT Mono', 'Liberation Mono',
      Courier, monospace;
  }

  body {
    /*background-image: radial-gradient(#ddd 1px, transparent 1px),
      radial-gradient(#ddd 1px, transparent 1px);*/
    background-position: 0 0, 25px 25px; /* Keep custom background */
    background-attachment: fixed; /* Keep custom background */
    background-size: 50px 50px; /* Keep custom background */
    -webkit-text-size-adjust: 100%; /* Keep for mobile Safari */
  }

  pre {
    tab-size: 2; /* Keep: Tailwind has no direct equivalent */
  }

  table td::after {
    content: ''; /* Keep: Tailwind cannot generate content */
    display: inline-block; /* Keep: Tailwind cannot generate content */
    min-height: 0.9rem; /* Keep: Tailwind cannot generate content */
  }
</style>
