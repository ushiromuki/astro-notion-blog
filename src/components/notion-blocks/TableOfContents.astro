---
import * as interfaces from '../../lib/interfaces.ts'
import { buildHeadingId } from '../../lib/blog-helpers.ts'
import { snakeToKebab } from '../../lib/style-helpers.ts'
// import '../../styles/notion-color.css' // Removed import

export interface Props {
  block: interfaces.Block
  headings: interfaces.Block[]
}

const { block, headings } = Astro.props

const notionColorToTailwindText: { [key: string]: string } = {
  default: '', // Default color, no specific class needed, or use a site default if defined elsewhere
  gray: 'text-[rgba(120,119,116,1)]',
  brown: 'text-[rgba(159,107,83,1)]',
  orange: 'text-[rgba(217,115,13,1)]',
  yellow: 'text-[rgba(203,145,47,1)]',
  green: 'text-[rgba(68,131,97,1)]',
  blue: 'text-[rgba(51,126,169,1)]',
  purple: 'text-[rgba(144,101,176,1)]',
  pink: 'text-[rgba(193,76,138,1)]',
  red: 'text-[rgba(212,76,71,1)]',
}

const baseLinkClasses = "block leading-[1.8rem] text-[0.9rem] font-medium underline hover:!bg-[rgba(241,241,239,1)]"

---

<div class="table-of-contents">
  {
    headings.map((headingBlock: interfaces.Block) => {
      const heading =
        headingBlock.Heading1 || headingBlock.Heading2 || headingBlock.Heading3

      let indentPaddingClass = ''
      if (headingBlock.Type === 'heading_2') {
        indentPaddingClass = 'pl-6' // Tailwind class for padding-left: 1.5rem
      } else if (headingBlock.Type === 'heading_3') {
        indentPaddingClass = 'pl-12' // Tailwind class for padding-left: 3rem
      }

      const tocColorKey = snakeToKebab(block.TableOfContents.Color)
      const colorClass = notionColorToTailwindText[tocColorKey] || ''

      return (
        <a
          href={`#${buildHeadingId(heading)}`}
          class={`${baseLinkClasses} ${colorClass} ${indentPaddingClass}`}
        >
          {heading.RichTexts.map(
            (richText: interfaces.RichText) => richText.PlainText
          ).join('')}
        </a>
      )
    })
  }
</div>

<style>
  /* All styles migrated to Tailwind classes */
</style>
