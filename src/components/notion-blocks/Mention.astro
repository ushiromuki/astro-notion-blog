---
import { Post } from '../../lib/interfaces.ts'
import { getPostByPageId } from '../../lib/notion/client'
import { getPostLink } from '../../lib/blog-helpers.ts'
// import '../../styles/notion-color.css' // Removed import
import arrow from '../../images/icon-arrow-link.svg'

export interface Props {
  pageId: string
}

const { pageId } = Astro.props

let post: Post = null
if (pageId) {
  post = await getPostByPageId(pageId)
}

const linkBaseClasses = "inline-flex font-semibold gap-1"
const iconSpanBaseClasses = "h-fit flex-shrink-0 relative"
const notionIconClasses = "w-[1.3em] h-[1.3rem] align-sub flex-shrink-0 relative"
const iconLinkClasses = "block absolute top-[1em] right-0 w-2 h-2"
const textSpanBaseClasses = "text-[var(--fg)] font-medium underline"
const textNotFoundClasses = "font-normal no-underline"

---

{
  post ? (
    <a href={getPostLink(post.Slug)} class={linkBaseClasses}>
      <>
        <span class={iconSpanBaseClasses}>
          {post.Icon && post.Icon.Type === 'emoji' ? (
            post.Icon.Emoji
          ) : post.Icon && post.Icon.Type === 'external' ? (
            <img
              src={post.Icon.Url}
              class={notionIconClasses}
              alt="Post title icon in a page link"
            />
          ) : (
            'ðŸ“„'
          )}
          <img src={arrow.src} class={iconLinkClasses} alt="Arrow icon of a page link" />
        </span>
        <span class={textSpanBaseClasses}>{post.Title}</span>
      </>
    </a>
  ) : (
    <a class={linkBaseClasses}>
      <span class={iconSpanBaseClasses}>
        ðŸš«
        <img src={arrow.src} class={iconLinkClasses} alt="Arrow icon of a page link" />
      </span>
      <span class={`${textSpanBaseClasses} ${textNotFoundClasses}`}>Post not found</span>
    </a>
  )
}
<!-- Style tag removed as its content is migrated to Tailwind classes -->
