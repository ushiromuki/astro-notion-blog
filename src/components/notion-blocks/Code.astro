---
import Prism from 'prismjs'
import 'prismjs/components/prism-css'
import 'prismjs/components/prism-diff'
import 'prismjs/components/prism-docker'
import 'prismjs/components/prism-elixir'
import 'prismjs/components/prism-go'
import 'prismjs/components/prism-hcl'
import 'prismjs/components/prism-java'
import 'prismjs/components/prism-json'
import 'prismjs/components/prism-python'
import 'prismjs/components/prism-ruby'
import 'prismjs/components/prism-sql'
import 'prismjs/components/prism-typescript'
import 'prismjs/components/prism-yaml'
import * as interfaces from '../../lib/interfaces'
import Caption from './Caption.astro'

export interface Props {
  block: interfaces.Block
}

const { block } = Astro.props

const code = block.Code.RichTexts.map(
  (richText: interfaces.RichText) => richText.Text.Content
).join('')
const language = block.Code.Language.toLowerCase()
const grammer =
  Prism.languages[language.toLowerCase()] || Prism.languages.javascript
---

<div class="code block w-full mb-[0.6rem]">
  <div class="bg-[rgb(247,246,243)] rounded-[var(--radius)]">
    {
      /* prettier-ignore */
      language === 'mermaid' ? (
        <pre class="mermaid block overflow-auto p-8 text-[0.9rem] leading-[1.2rem] whitespace-pre min-w-full overflow-x-auto">{code}</pre>
      ) : (
        <>
           <div class="flex justify-end">
             <button class="copy block w-16 border-0 rounded-[var(--radius)] bg-[rgba(227,226,224,0.5)] text-[var(--fg)] leading-[1.2rem] cursor-pointer" data-code={code} data-done-text="Copied!">
              Copy
            </button>
          </div>
           <pre class="block overflow-auto pt-[0.8rem] px-8 pb-8 text-[0.9rem] leading-[1.2rem] whitespace-pre min-w-full overflow-x-auto"><code class="text-[var(--fg)] p-0 !bg-[rgb(247,246,243)] rounded-none" set:html={Prism.highlight(code, grammer, language)} /></pre>
        </>
      )
    }
  </div>
  <Caption richTexts={block.Code.Caption} />
</div>

<script>
  import mermaid from 'mermaid'
  mermaid.initialize({ startOnLoad: true, theme: 'neutral' })
</script>

<script>
  document.querySelectorAll('button.copy').forEach((button) => {
    button.addEventListener('click', (ev) => {
      navigator.clipboard
        .writeText(ev.target.getAttribute('data-code'))
        .then(() => {
          const originalText = ev.target.innerText

          ev.target.innerText = ev.target.getAttribute('data-done-text')

          setTimeout(() => {
            ev.target.innerText = originalText
          }, 3000)
        })
    })
  })
</script>

<style>
  .code {
    /* display: block; */
    /* width: 100%; */
    /* margin-bottom: 0.6rem; */
  }
  .code > div {
    /* background: rgb(247, 246, 243); */
    /* border-radius: var(--radius); */
  }
  .code > div div {
    /* display: flex; */
    /* justify-content: flex-end; */
  }
  .code button.copy {
    /* display: block; */
    /* width: 4rem; */
    /* border: 0; */
    /* border-radius: var(--radius); */
    /* background-color: rgba(227, 226, 224, 0.5); */
    /* color: var(--fg); */
    /* line-height: 1.2rem; */
    /* cursor: pointer; */
  }
  .code pre {
    /* display: block; */ /* Migrated */
    /* overflow: auto; */ /* Migrated */
    /* padding: 0.8rem 2rem 2rem; */ /* Migrated to pt-[0.8rem] px-8 pb-8 */
    /* font-size: 0.9rem; */ /* Migrated */
    /* line-height: 1.2rem; */ /* Migrated */
    /* white-space: pre; */ /* Migrated */
    /* width: 100px; */ /* Migrated (effectively, by min-w-full) */
    /* min-width: 100%; */ /* Migrated */
    /* overflow-x: auto; */ /* Migrated */
    &::-webkit-scrollbar {
      height: 10px;
    }
    &::-webkit-scrollbar-thumb {
      background: rgb(211, 209, 203);
    }
    &::-webkit-scrollbar-track {
      background: rgb(237, 236, 233);
    }
  }
  /* .code pre.mermaid rule removed as it's fully migrated (p-8 was applied) */
  /* .code pre code rule removed as it's fully migrated */
</style>
